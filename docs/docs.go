// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Maxime Cattet",
            "email": "m[at]skatekrak.com"
        },
        "license": {
            "name": "AGPLv3"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/contents": {
            "get": {
                "tags": [
                    "contents"
                ],
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "rss",
                                "vimeo",
                                "youtube"
                            ],
                            "type": "string"
                        },
                        "description": "filter contents by source types",
                        "name": "sourceTypes",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "filter contents by source id",
                        "name": "sources",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Fetch page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Content"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/JSONError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Content": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "For feedly article",
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "contentId": {
                    "description": "Youtube or Vimeo ID or Feedly ID",
                    "type": "string"
                },
                "contentUrl": {
                    "description": "Youtube or Vimeo video url or article URL",
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "publishedAt": {
                    "type": "string"
                },
                "rawContent": {
                    "type": "string"
                },
                "rawSummary": {
                    "type": "string"
                },
                "sourceId": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "thumbnailUrl": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "JSONError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Pagination": {
            "type": "object",
            "properties": {
                "items": {},
                "page": {
                    "type": "integer"
                },
                "perPage": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                },
                "totalResults": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Scribe API",
	Description:      "Document for the Scribe API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
